// Sum All Odd Fibonacci Numbers
// Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

// The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

// For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than 10 are 1, 1, 3, and 5.

// Remember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.

function sumFibs(num) {
	let fibArr = new Array(1, 1);
  
  for(let i = 0; i < num; i++){
  	let newNum = fibArr[i] + fibArr[i+1];
    if(newNum > num){
    	for(let j = 0; j < fibArr.length; j++){
      	if(fibArr[j]%2 == 0){
        	fibArr.splice(j, 1);
        }
      }
      let sum = fibArr.reduce(function(a, b){
          	return a + b;
          });
    	console.log(sum);
  		return sum;
    }else {
    	fibArr.push(newNum);
    }
  }
  
  for(let j = 0; j < fibArr.length; j++){
  	console.log('loop');
  }
  
  console.log(fibArr);
  return fibArr;
}

sumFibs(4);

// sumFibs(4) should return 5.
